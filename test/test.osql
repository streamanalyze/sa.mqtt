load_osql("mqtt.osql");
// Get a C-backtrace on segfault, nice to have trace if 
// a crash occurs
_lisp("(sig-bt)");
set :mqtt_connect_opts = {
  "qos": 0,
  "connection": "tcp://localhost:1883",
  "clientid": "client"
};

set :mqtt_connect_opts1 = {
  "qos": 1,
  "connection": "tcp://localhost:1883",
  "clientid": "client2"
};

set :mqtt_connect_opts2 = {
  "qos": 2,
  "connection": "tcp://localhost:1883",
  "clientid": "client3"
};



mqtt:register_client("mqtt",:mqtt_connect_opts);

mqtt:register_client("mqtt1",:mqtt_connect_opts1);

mqtt:register_client("mqtt2",:mqtt_connect_opts2);

load_lisp("test/setup_test.lsp");

validate "MQTT subscribe types"
   check sum(select integer(b)
           from Binary b 
          where b in subscribe("mqtt:/stream3")
          limit 10) >= 9 => true;

validate "MQTT Subscribes (and publish)"
   check count(extract(pivot_streams((select vector of s 
           from Stream s, Charstring topic
          where topic in bag("mqtt:/stream1","mqtt1:/stream2","mqtt2:/stream3")
            and s = (select stream of json:unstringify(charstring(b))
                       from binary b
                      where b in subscribe(topic)
                      limit 10))))) => 30;


validate "MQTT Modify and relay"
   check select distinct x
           from number x
          where x in extract(merge_streams(bag(
     (streamof(sink(publish(binary(integer(mod(diota(0.01,1,10000),5))), "mqtt:/pub")))),
     (streamof(sink(publish((select stream of integer(b)+10
        from binary b where b in subscribe("mqtt1:/pub")),"mqtt1:/modified")))),
     (select stream of json:unstringify(charstring(b))
        from Binary b
       where b in subscribe("mqtt:/modified"))
   ))) limit 10 => bag(12,13,14,10,11);

validate "MQTT Fast"
  check print("\n") => true
  check sink(publish(siota(1,10),"mqtt:/g1")) => true
  check print("\tQoS0 " 
         + (1000/abs(now() - ts(last(select x 
                                       from Object x 
                                      where x in subscribe("mqtt:/max1") 
                                      limit 1000))))+" (max ~1000)") => true
  check sink(publish(siota(1,10),"mqtt:/g2")) => true
  check print("\tQoS1 " 
         + (1000/abs(now() - ts(last(select x 
                                       from Object x 
                                      where x in subscribe("mqtt1:/max2") 
                                      limit 1000))))+" (max ~1000)") => true
  check sink(publish(siota(1,10),"mqtt:/g4")) => true
  check print("\tQoS2 " 
         + (1000/abs(now() - ts(last(select x 
                                       from Object x 
                                      where x in subscribe("mqtt2:/max3") 
                                      limit 1000))))+" (max ~1000)") => true
  check sink(publish(siota(1,10),"mqtt:/g6")) => true;


quit;